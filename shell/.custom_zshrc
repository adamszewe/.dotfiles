# Git configuration
export GIT_PAGER="less -F -X"
export GIT_EDITOR=vim

# Git aliases
alias g='git'
alias gs='git status'
alias gcd='git checkout develop'
alias grhh='git reset --hard HEAD'
alias ga='git add'
alias gaa='git add .'
alias gc='git commit'
alias gca='git commit --amend'
alias gh='git log --pretty=oneline --max-count=5'
alias gpod='git pull origin develop'
alias gpom='git pull origin master'
alias gfch="git fetch origin $1 && git checkout $1"
alias gpf="git push --force"
alias gbd="git branch --list | fzf | xargs git branch --delete --force"

function gch {
    if [ -z "$1" ]; then
        git branch --list | fzf | xargs git checkout
    else
        git checkout "$@"
    fi
}

function grd {
    current_branch=$(git rev-parse --abbrev-ref HEAD)
    git checkout develop
    git pull origin develop
    git checkout $current_branch
    git rebase develop
}

# generic aliases
alias ll='ls -l'
alias gr="./gradlew"
alias v="vim"
alias ip3='ipython3'
alias wsp="cd ~/Documents/workspace/"


if [ -d "$HOME/.local/bin/" ]; then
    export PATH=$PATH:$HOME/.local/bin/
fi

function find_in_workspace {
    found_item=$(find ~/Documents ~/ ~/Documents/workspace -maxdepth 2 -mindepth 1 -type d 2> /dev/null | fzf)
    if [ -z "$found_item" ]; then
        # do nothing, remain silent, be quiet for several days
    else
        echo "opening the directory: $found_item"
        cd "$found_item"
    fi
    clear
}

function open_project_in_ide {
    found_item=$(find ~/Documents ~/ ~/Documents/workspace -maxdepth 2 -mindepth 1 -type d 2> /dev/null | fzf)
    if [ -z "$found_item" ]; then
        # do nothing, remain silent, be quiet for several days
    else
        JETBRAINS_SCRIPTS_DIR="$HOME/.jetbrains-toolbox-ide-scripts"
        if [ -d "$JETBRAINS_SCRIPTS_DIR" ]; then
            script_names=($(ls -1 "$JETBRAINS_SCRIPTS_DIR"))
            for script_name in ${script_names[@]} ; do
              if [[ "$found_item" =~ "$script_name/" ]]; then
                echo "opening with: $script_name, project: $found_item"
                $script_name "$found_item"
                break
              fi
            done
            # todo: in case a script is not found to matched right away to open the project, then ask for which ide should be used for opening it
        else
            echo "jetbrains scripts directory does not exist, exiting without opening a project"
        fi

    fi
}

# key bindings
bindkey -s ^f "find_in_workspace\n"
bindkey -s ^o "open_project_in_ide\n"
